{
	"info": {
		"_postman_id": "f83a3222-d720-4bbe-a75f-af63886624ba",
		"name": "25_groupPetrashko",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "EP_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Nadya\");",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"32\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "162.55.220.72:5005/get_method?name=Nadya&age=32",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "name",
							"value": "Nadya"
						},
						{
							"key": "age",
							"value": "32"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"//4,3       ",
							"pm.test(\"Check name in response SUCCESS\", function () {",
							"    var jsonData = pm.response.json();",
							"    // pm.expect(jsonData.value).to.eql(100);",
							"    pm.expect(jsonData.name).to.eql(\"Nadya\");",
							"    console.log(jsonData)",
							"});",
							"//5",
							"pm.test(\"Check age in response SUCCESS\", function () {",
							"    var jsonData = pm.response.json();",
							"    // pm.expect(jsonData.value).to.eql(100);",
							"    pm.expect(jsonData.age).to.eql(\"32\");",
							"    console.log(jsonData)",
							"});",
							"//6",
							"pm.test(\"Check salary in response SUCCESS\", function () {",
							"    var jsonData = pm.response.json();",
							"    // pm.expect(jsonData.value).to.eql(100);",
							"    pm.expect(jsonData.salary).to.eql(400);",
							"    console.log(jsonData)",
							"});",
							" //11",
							"pm.test(\"Show family in console\", function () {",
							"    var jsonData = pm.response.json();",
							"    // pm.expect(jsonData.value).to.eql(100);",
							"   ",
							"  ",
							"    console.log(jsonData.family)",
							"});",
							"//7",
							" function prepareRequest (request){",
							"       var jsonDataRequest = {};",
							"    request.body.formdata.all().forEach((param) => { jsonDataRequest[param.key] = param.value});",
							"    return jsonDataRequest;",
							"  } ",
							"",
							"  //8",
							"  pm.test(\"name is equal to name s request  \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"    pm.expect(jsonDataResponse.name).to.eql((prepareRequest(pm.request).name))",
							"});",
							"//9",
							"pm.test(\"age is equal to age s request  \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"    pm.expect(jsonDataResponse.age).to.eql((prepareRequest(pm.request).age))",
							"});",
							"",
							"//10",
							"pm.test(\"salary is equal to salary s request  \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"    pm.expect(jsonDataResponse.salary.toString()).to.eql((prepareRequest(pm.request).salary))",
							"});",
							"//12",
							"pm.test(\"u_salary_1_5_year  is equal to salary*4  request  \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"    pm.expect(jsonDataResponse.family.u_salary_1_5_year).to.eql((prepareRequest(pm.request).salary*4))",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Nadya",
							"type": "text"
						},
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "400",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "162.55.220.72:5005/user_info_3",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "nadya",
							"disabled": true
						},
						{
							"key": "age",
							"value": "32",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "400",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_3",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "162.55.220.72:5005/object_info_1?name=nadya&age=32&weight=75",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "name",
							"value": "nadya"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "weight",
							"value": "75"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_4",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "162.55.220.72:5005/object_info_2?name=nadya&age=32&salary=400",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "nadya"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "400"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//4",
							"function prepareRequest (request){",
							"       var jsonDataRequest = {};",
							"    request.body.formdata.all().forEach((param) => { jsonDataRequest[param.key] = param.value});",
							"    return jsonDataRequest;",
							"  } ",
							"  ",
							"  //5",
							"  pm.test(\"name is equal name s to request \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"    ",
							"    var jsonDataRequest = {};",
							"pm.request.url.query.all().forEach((param) => { jsonDataRequest[param.key] = param.value});",
							"",
							"    pm.expect(jsonDataResponse.name).to.eql(jsonDataRequest.name);",
							"  ",
							"});",
							"//6",
							"pm.test(\"age is equal to age s request \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"    ",
							"    var jsonDataRequest = {};",
							"pm.request.url.query.all().forEach((param) => { jsonDataRequest[param.key] = param.value});",
							"",
							"    pm.expect(jsonDataResponse.age).to.eql(jsonDataRequest.age);",
							"  ",
							"});",
							"//7",
							"pm.test(\"salary is equal to salary s request \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"    ",
							"    var jsonDataRequest = {};",
							"pm.request.url.query.all().forEach((param) => { jsonDataRequest[param.key] = param.value});",
							"",
							"    pm.expect(jsonDataResponse.salary.toString()).to.eql(jsonDataRequest.salary);",
							"  ",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"//8",
							"pm.test(\"Show family in console\", function () {",
							"    var jsonData = pm.response.json();",
							"   ",
							"   ",
							"    console.log(jsonData.family)",
							"});",
							"//9",
							"pm.test(\"Dog have name\", function () {",
							"    var jsonData = pm.response.json();",
							"   ",
							"    pm.expect(jsonData.family.pets.dog.name).to.be.a('string');",
							"    // проверка на то поле name  это сторка",
							"});",
							"//10",
							"pm.test(\"Dog have age\", function () {",
							"    var jsonData = pm.response.json();",
							"   ;",
							"    pm.expect(jsonData.family.pets.dog).haveOwnProperty('age');",
							"    // проверка на наличие поля age",
							"});",
							"//11",
							"pm.test(\"Dog name is Luky\", function () {",
							"    var jsonData = pm.response.json();",
							"   ",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql('Luky');",
							"});",
							"//12",
							"pm.test(\"Dog's age is 4\", function () {",
							"    var jsonData = pm.response.json();",
							"    ",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "162.55.220.72:5005/object_info_3?name=nadya&age=32&salary=400",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "nadya"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "400"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check name in response SUCCESS\", function () {",
							"    var jsonData = pm.response.json();",
							"   ",
							"    pm.expect(jsonData.name).to.eql(\"nadya\");",
							"    console.log(jsonData)",
							"});",
							"",
							"pm.test(\"Check age in response SUCCESS\", function () {",
							"    var jsonData = pm.response.json();",
							"    ",
							"    pm.expect(jsonData.age).to.eql(32);",
							"    console.log(jsonData)",
							"});",
							"//7",
							"pm.test(\"Show response salary in console\", function () {",
							"    var jsonData = pm.response.json();",
							"   ",
							"   ",
							"    console.log(jsonData.salary)",
							"});",
							"//8",
							"pm.test(\"Show request salary in console\", function () {",
							"    var jsonData = pm.request.url.query;",
							"    console.log('salary:',jsonData)",
							"   ",
							"   ",
							"    ",
							"});",
							"//9",
							"pm.test(\"Show 0 element of the salary in console\", function () {",
							"    var jsonData = pm.response.json();",
							"   ",
							"   ",
							"    console.log(jsonData.salary[0])",
							"});",
							"//10",
							"pm.test(\"Show 1 element of the salary  in console\", function () {",
							"    var jsonData = pm.response.json();",
							"   ",
							"   ",
							"    console.log(jsonData.salary[1])",
							"});",
							"//11",
							"pm.test(\"Show 2 element of the salary in console\", function () {",
							"    var jsonData = pm.response.json();",
							"   ",
							"   ",
							"    console.log(jsonData.salary[2])",
							"});",
							"",
							"pm.test(\"The 0th element of the salary parameter is equal to request \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"    ",
							"    var jsonDataRequest = {};",
							"pm.request.url.query.all().forEach((param) => { jsonDataRequest[param.key] = param.value});",
							"",
							"    pm.expect(jsonDataResponse.salary[0].toString()).to.eql(jsonDataRequest.salary);",
							"  ",
							"});",
							"",
							"pm.test(\"The 1th element of the salary parameter is equal to request \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"    ",
							"    var jsonDataRequest = {};",
							"pm.request.url.query.all().forEach((param) => { jsonDataRequest[param.key] = param.value});",
							"",
							"    pm.expect(jsonDataResponse.salary[1].toString()).to.eql((jsonDataRequest.salary*2).toString());",
							"  ",
							"});",
							"pm.test(\"The 2th element of the salary parameter is equal to request \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"    ",
							"    var jsonDataRequest = {};",
							"    pm.request.url.query.all().forEach((param) => { jsonDataRequest[param.key] = param.value});",
							"",
							"    pm.expect(jsonDataResponse.salary[2].toString()).to.eql((jsonDataRequest.salary*3).toString());",
							"  ",
							"});",
							"",
							"",
							"var age = pm.variables.get(\"age\");",
							"console.log('age:',age)",
							"",
							"",
							"var name = pm.variables.get(\"name\");",
							"console.log('name:',name)",
							"",
							"",
							"var salary = pm.variables.get(\"salary\");",
							"console.log('salary:',salary)",
							"",
							"",
							"var jsonData = pm.response.json();",
							"var salary = jsonData.salary;",
							"for (let i = 0; i < salary.length; i++) {",
							"\tconsole.log(`salary:list ${i}`,salary[i]); // выведет 0,1,2 ",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "162.55.220.72:5005/object_info_4?name=nadya&age=32&salary=400",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "nadya"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "400"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"  function prepareRequest (request){",
							"       var jsonDataRequest = {};",
							"    request.body.formdata.all().forEach((param) => { jsonDataRequest[param.key] = param.value});",
							"    return jsonDataRequest;",
							"  } ",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"//pm.test(\"Your test name\", function () {",
							" //   var jsonData = pm.response.json();",
							" //   pm.expect(jsonData.value).to.eql(100);",
							"//});",
							"",
							"pm.test(\" json response has  start_qa_salary\", function () {",
							"    var jsonData = pm.response.json();",
							"   ;",
							"    pm.expect(jsonData).haveOwnProperty('start_qa_salary');",
							"   ",
							"});",
							"",
							"pm.test(\" json response has  qa_salary_after_6_months\", function () {",
							"    var jsonData = pm.response.json();",
							"   ;",
							"    pm.expect(jsonData).haveOwnProperty('qa_salary_after_6_months');",
							"   ",
							"});",
							"",
							"pm.test(\" json response has  qa_salary_after_12_months\", function () {",
							"    var jsonData = pm.response.json();",
							"   ;",
							"    pm.expect(jsonData).haveOwnProperty('qa_salary_after_12_months');",
							"   ",
							"});",
							"",
							"pm.test(\" json response has  qa_salary_after_1.5_year\", function () {",
							"    var jsonData = pm.response.json();",
							"   ;",
							"    pm.expect(jsonData).haveOwnProperty('qa_salary_after_1.5_year');",
							"   ",
							"});",
							"",
							"pm.test(\" json response has qa_salary_after_3.5_years\", function () {",
							"    var jsonData = pm.response.json();",
							"   ;",
							"    pm.expect(jsonData).haveOwnProperty('qa_salary_after_3.5_years');",
							"   ",
							"});",
							"",
							"pm.test(\" json response has person\", function () {",
							"    var jsonData = pm.response.json();",
							"   ;",
							"    pm.expect(jsonData).haveOwnProperty('person');",
							"   ",
							"});",
							"",
							"",
							" console.log(pm.response.json())//Спарсить response body в json  ",
							"",
							"",
							"console.log(prepareRequest(pm.request))//Спарсить request",
							"",
							"//14",
							"pm.test(\"start_qa_salary  is equal to salary from request  \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"    pm.expect(jsonDataResponse.start_qa_salary.toString()).to.eql((prepareRequest(pm.request).salary))",
							"});",
							"",
							"//15",
							"pm.test(\"qa_salary_after_6_months is equal to salary*2 from request  \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"    pm.expect(jsonDataResponse.qa_salary_after_6_months).to.eql((prepareRequest(pm.request).salary*2))",
							"});",
							"//16",
							"pm.test(\"qa_salary_after_12_months is equal to salary*2.7 from request  \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"    pm.expect(jsonDataResponse.qa_salary_after_12_months).to.eql((prepareRequest(pm.request).salary*2.7))",
							"});",
							"",
							"//17",
							"",
							"pm.test(\"qa_salary_after_1.5_year  is equal to salary*3.3  from request  \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"    pm.expect(jsonDataResponse[\"qa_salary_after_1.5_year\"]).to.eql((prepareRequest(pm.request).salary*3.3))",
							"});",
							"//можно обращаться как к элементу массива []",
							"",
							"//18 ",
							"pm.test(\"qa_salary_after_3.5_years is equal to salary*3.8  from request  \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"    pm.expect(jsonDataResponse[\"qa_salary_after_3.5_years\"]).to.eql((prepareRequest(pm.request).salary*3.8))",
							"});",
							"",
							"//19",
							"pm.test(\" person.u_name[1] is equal to salary from request  \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"    pm.expect(jsonDataResponse.person.u_name[1].toString()).to.eql((prepareRequest(pm.request).salary))",
							"});",
							"",
							"//20",
							"pm.test(\" u_age is equal to age from request  \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"    pm.expect(jsonDataResponse.person.u_age.toString()).to.eql((prepareRequest(pm.request).age))",
							"});",
							"",
							"//21",
							"pm.test(\"u_salary_after_5_years is equal to salary*4.2  from request  \", function () {",
							"    var jsonDataResponse = pm.response.json();",
							"pm.expect(jsonDataResponse.person.u_salary_5_years).to.eql((prepareRequest(pm.request).salary*4.2))",
							" });",
							"",
							"//22",
							"var jsonData = pm.response.json();",
							"var person = jsonData.person;",
							"for (let i = 0; i < person.length; i++) {",
							"\tconsole.log(`person:list ${i}`,person[i]); // выведет 0,1,2 ",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "162.55.220.72:5005/user_info_2",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}